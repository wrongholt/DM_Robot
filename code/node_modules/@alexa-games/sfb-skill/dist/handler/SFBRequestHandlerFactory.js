"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const AlexaSFBRequestHandler_1 = require("./AlexaSFBRequestHandler");
const path = __importStar(require("path"));
class SFBRequestHandlerFactory {
    static create(event, context, extensions, configAccessor, projectDir) {
        const locale = event.request.locale ? event.request.locale : "en-US";
        const dynamoDBTalbeName = configAccessor.getRequestLocalizedValue("dynamo-db-session-table-name", event);
        const storyMetadata = path.resolve(projectDir, "res", event.request.locale, configAccessor.getRequestLocalizedValue("abc-baked-filename", event));
        const pollyConfig = Object.assign(configAccessor.getRequestLocalizedValue("polly-config", event), {
            s3DomainName: configAccessor.getRequestLocalizedValue("s3-domain-name", event),
            bucketName: configAccessor.getRequestLocalizedValue("s3-bucket-name", event)
        });
        const defaultPollyConfig = configAccessor.getRequestLocalizedValue("default-narrator", event);
        const sfbHandler = new AlexaSFBRequestHandler_1.SFBRequestHandler({
            locale: locale,
            story: require(storyMetadata),
            pollyVoiceConfig: pollyConfig,
            defaultVoiceConfig: defaultPollyConfig,
            attributeTableName: dynamoDBTalbeName
        }, extensions, configAccessor, projectDir);
        return sfbHandler;
    }
}
exports.SFBRequestHandlerFactory = SFBRequestHandlerFactory;
//# sourceMappingURL=SFBRequestHandlerFactory.js.map