{"version":3,"file":"PlayStage.js","sourceRoot":"","sources":["../../storyEntities/PlayStage.ts"],"names":[],"mappings":"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","sourcesContent":["import { SceneAudioItem, VisualOptions, AudioItem, AlexaAudioType } from '../aceEntities/interfaces';\n\nexport class PlayStage {\n    private visitedSceneIDsOnRun: string[] = [];\n\n    private speechAudioSequence: SceneAudioItem[] = [];\n\n    private repromptAudioSequence: SceneAudioItem[] = [];\n\n    private recapAudioSequence: SceneAudioItem[] = [];\n\n    private visualOptions: VisualOptions[] | undefined = undefined;\n\n    private currentSceneAudioQueue: SceneAudioItem = {\n        foreground: [],\n        background: []\n    };\n\n    private currentSceneRepromptAudioQueue: SceneAudioItem = {\n        foreground: [],\n        background: []\n    };\n\n    private currentSceneRecapAudioQueue: SceneAudioItem = {\n        foreground: [],\n        background: []\n    };\n\n    constructor() {\n        this.resetStage();\n    }\n\n    public resetStage(): void {\n        this.visitedSceneIDsOnRun = [];\n\n        this.speechAudioSequence = [];\n    \n        this.repromptAudioSequence = [];\n    \n        this.recapAudioSequence = [];\n    \n        this.visualOptions = undefined;\n    \n        this.currentSceneAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    \n        this.currentSceneRepromptAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    \n        this.currentSceneRecapAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    }\n\n    public logVisitedScene(sceneID: string): void {\n        this.visitedSceneIDsOnRun.push(sceneID);\n    }\n\n    public getStageSpeechAudioSequence(): SceneAudioItem[] {\n        return this.condensePollyItem(this.speechAudioSequence);\n    }\n\n    public getStageRepromptAudioSequence(): SceneAudioItem[] {\n        return this.condensePollyItem(this.repromptAudioSequence);\n    }\n\n    public getStageRecapAudioSequence(): SceneAudioItem[] {\n        return this.condensePollyItem(this.recapAudioSequence);\n    }\n    \n\n    public getStageVisualOptions(): VisualOptions[] | undefined {\n        return this.visualOptions;\n    }\n\n    public setStageSpeechAudioSequence(audio: SceneAudioItem[]): void {\n        this.speechAudioSequence = audio;\n    }\n\n    public setStageRepromptAudioSequence(audio: SceneAudioItem[]): void {\n        this.repromptAudioSequence = audio;\n    }\n\n    public setStageRecapAudioSequence(audio: SceneAudioItem[]): void {\n        this.recapAudioSequence = audio;\n    }\n    \n    public setStageVisualOptions(visuals: VisualOptions[]): void {\n        this.visualOptions = visuals;\n    }\n\n    public appendStageSpeechAudioSequence(audio: SceneAudioItem[]): void {\n        this.speechAudioSequence = this.speechAudioSequence.concat(audio);\n    }\n\n    public appendStageRepromptAudioSequence(audio: SceneAudioItem[]): void {\n        this.repromptAudioSequence = this.repromptAudioSequence.concat(audio);\n    }\n\n    public appendStageRecapAudioSequence(audio: SceneAudioItem[]): void {\n        this.recapAudioSequence = this.recapAudioSequence.concat(audio);\n    }\n\n    public appendStageVisuals(visuals: VisualOptions): void {\n        if (!this.visualOptions) {\n            this.visualOptions = [];\n        }\n        \n        this.visualOptions.push(visuals);\n    }\n\n    public startNewScene(): void {\n        this.currentSceneAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    \n        this.currentSceneRepromptAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    \n        this.currentSceneRecapAudioQueue = {\n            foreground: [],\n            background: []\n        };\n    }\n\n    public appendSceneSpeechForeground(audioItem: AudioItem[]): void {\n        this.currentSceneAudioQueue.foreground = this.currentSceneAudioQueue.foreground.concat(audioItem);\n    }\n\n    public appendSceneSpeechBackground(audioItem: AudioItem[]): void {\n        this.currentSceneAudioQueue.background = this.currentSceneAudioQueue.foreground.concat(audioItem);\n    }\n\n    public appendSceneRepromptForeground(audioItem: AudioItem[]): void {\n        this.currentSceneRepromptAudioQueue.foreground = this.currentSceneRepromptAudioQueue.foreground.concat(audioItem);\n    }\n\n    public appendSceneRepromptBackground(audioItem: AudioItem[]): void {\n        this.currentSceneRepromptAudioQueue.background = this.currentSceneRepromptAudioQueue.background.concat(audioItem);\n    }\n\n    public appendSceneRecapForeground(audioItem: AudioItem[]): void {\n        this.currentSceneRecapAudioQueue.foreground = this.currentSceneRecapAudioQueue.foreground.concat(audioItem);\n    }\n\n    public appendSceneRecapBackground(audioItem: AudioItem[]): void {\n        this.currentSceneRecapAudioQueue.background = this.currentSceneRecapAudioQueue.background.concat(audioItem);\n    }\n\n    public getSpeechSceneAudio(): SceneAudioItem {\n        return this.currentSceneAudioQueue;\n    }\n\n    public getRepromptSceneAudio(): SceneAudioItem {\n        return this.currentSceneRepromptAudioQueue;\n    }\n\n    public getRecapSceneAudio(): SceneAudioItem {\n        return this.currentSceneRecapAudioQueue;\n    }\n\n    public closeScene(): void {\n        if (this.currentSceneAudioQueue.foreground.length > 0 || this.currentSceneAudioQueue.background.length > 0) {\n            this.speechAudioSequence = this.speechAudioSequence.concat(this.currentSceneAudioQueue);\n        }\n\n        if (this.currentSceneRepromptAudioQueue.foreground.length > 0 || this.currentSceneRepromptAudioQueue.background.length > 0) {\n            this.repromptAudioSequence = this.repromptAudioSequence.concat(this.currentSceneRepromptAudioQueue);\n        }\n\n        if (this.currentSceneRecapAudioQueue.foreground.length > 0 || this.currentSceneRecapAudioQueue.background.length > 0) {\n            this.recapAudioSequence = this.recapAudioSequence.concat(this.currentSceneRecapAudioQueue);\n        }\n    }\n\n    private condensePollyItem(_sceneAudio: SceneAudioItem[]): SceneAudioItem[] {\n        let sceneAudio: SceneAudioItem[] = JSON.parse(JSON.stringify(_sceneAudio));\n        let optimizedStageSpeechSequence: SceneAudioItem[] = [];\n        // combine back-to-back polly items sharing same voice property into one.\n        let tempItem: SceneAudioItem | undefined = undefined;\n        let buildingItem: AudioItem | undefined = undefined;\n        let tempPushed: boolean = false;\n        for (let sceneItem of sceneAudio) {\n            if (sceneItem.background.length > 0) {\n                if (tempItem) {\n                    if (buildingItem) {\n                        tempItem.foreground.push(buildingItem);\n                        buildingItem = undefined;\n                    }\n\n                    tempPushed = true;\n                    optimizedStageSpeechSequence.push(tempItem);\n                    tempItem = undefined;\n                }\n\n                optimizedStageSpeechSequence.push(sceneItem);\n                continue;\n            }\n\n            for (let foregroundItem of sceneItem.foreground) {\n                if (!tempItem) {\n                    tempPushed = false;\n                    tempItem = {\n                        foreground: [],\n                        background: []\n                    };\n                }\n\n                if (foregroundItem.type === AlexaAudioType.POLLY) {\n                    if (buildingItem) {\n                        if (foregroundItem.volume == buildingItem.volume && foregroundItem.options && buildingItem.options\n                        && foregroundItem.options.pitch == buildingItem.options.pitch && foregroundItem.options.rate == buildingItem.options.rate\n                        && foregroundItem.options.voice == buildingItem.options.voice) {\n                            buildingItem.content += ` ${foregroundItem.content}`;\n                        } else {\n                            tempItem.foreground.push(buildingItem);\n\n                            buildingItem = foregroundItem;\n                        }\n                    } else {\n                        buildingItem = foregroundItem;\n                    }\n                } else {\n                    if (buildingItem) {\n                        tempItem.foreground.push(buildingItem);\n                    }\n                    tempItem.foreground.push(foregroundItem);\n                    buildingItem = undefined;\n                }\n            }\n        }\n\n        if (buildingItem && tempItem) {\n            tempItem.foreground.push(buildingItem);\n        }\n\n\n        if (!tempPushed && tempItem) {\n            optimizedStageSpeechSequence.push(tempItem);\n        }\n        return optimizedStageSpeechSequence;\n    }\n}"]}