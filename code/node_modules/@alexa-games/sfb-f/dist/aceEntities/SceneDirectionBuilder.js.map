{"version":3,"file":"SceneDirectionBuilder.js","sourceRoot":"","sources":["../../aceEntities/SceneDirectionBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import {SceneDirection, SceneDirectionType, AudioBlendOption, VisualOptions} from './interfaces';\n\nexport class SceneDirectionBuilder {\n    sceneDirections: SceneDirection[] = [];\n\n    private nestingStack: SceneDirection[] = [];\n\n    constructor() {\n    }\n\n\n    public registerChoiceDirections(utterances: string[], directions: SceneDirection[], narration?: string, saveToHistory: boolean = true) {\n        let parameters: any = {\n            utterances: utterances,\n            saveToHistory: String(saveToHistory),\n            directions: directions\n        }\n\n        if (narration) {\n            parameters.narration = narration;\n        }\n\n        this.sceneDirections.push({\n            directionType: SceneDirectionType.CHOICE,\n            parameters: parameters\n        });\n\n        return this;\n    }\n\n    public startChoice(utterances: string[], narration?: string, saveToHistory: boolean = true) {\n        let parameters: any = {\n            utterances: utterances,\n            saveToHistory: String(saveToHistory)\n        }\n\n        if (narration) {\n            parameters.narration = narration;\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.CHOICE,\n            parameters: parameters\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);   \n        }\n\n        this.nestingStack.push(direction);\n\n        return this;\n    }\n\n    public registerCondition(conditionString: string, directions: SceneDirection[]) {\n        let parameters: any = {\n            condition: conditionString,\n            directions: directions\n        }\n\n        this.sceneDirections.push({\n            directionType: SceneDirectionType.CONDITION,\n            parameters: parameters\n        });\n\n        return this;\n    }\n\n    public startCondition(conditionString: string) {\n        let parameters: any = {\n            condition: conditionString,\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.CONDITION,\n            parameters: parameters\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);   \n        }\n\n        this.nestingStack.push(direction);\n\n        return this;\n    }\n\n    public goTo(targetSceneID: string, targetSceneProperty?: string) {\n        let parameters: any = {\n            target: targetSceneID,\n        }\n\n        if (targetSceneProperty) {\n            parameters.targetSceneProperty = targetSceneProperty;\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.GO_TO,\n            parameters: parameters\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public saveAndGoTo(targetSceneID: string, targetSceneProperty?: string) {\n        let parameters: any = {\n            target: targetSceneID,\n        }\n\n        if (targetSceneProperty) {\n            parameters.targetSceneProperty = targetSceneProperty;\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.SAVE_AND_GO,\n            parameters: parameters\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public return() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.RETURN,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public pause() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.PAUSE,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public restart() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.RESTART,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public repeat() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REPEAT,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public repeatReprompt() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REPEAT_REPROMPT,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public goBack(backNumber: number) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.BACK,\n            parameters: {\n                count: backNumber\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public setReprompt(repromptSSML: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REPROMPT,\n            parameters: {\n                message: repromptSSML,\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);\n        }\n\n        return this;\n    }\n\n    public setBackgroundMusic(audioURL: string, delayMs?: string, volume?: string, blendOption?: AudioBlendOption) {\n        let param: any = {\n            audioURL: audioURL\n        }\n\n        if (delayMs) param.delayMs = delayMs;\n        if (volume) param.volume = volume;\n        if (blendOption) param.blend = blendOption;\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.BGM,\n            parameters: param\n        };\n        \n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n        }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n    }\n\n    public setVisuals(visualOptions : VisualOptions) {\n\n        let params : {[key: string]: string;}= {};\n        Object.keys(visualOptions).forEach(function(key) {\n            params[ key ] = visualOptions[key];\n        }); \n\n        this.sceneDirections.push({\n            directionType: SceneDirectionType.VISUALS,\n            parameters: params\n        });\n        \n        return this;\n    }\n\n    public increaseVariable(variableName: string, increaseBy: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.INCREASE,\n            parameters: {\n                variableName: variableName,\n                variableValue: increaseBy\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public multiplyVariable(variableName: string, multiplyBy: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.MULTIPLY,\n            parameters: {\n                variableName: variableName,\n                variableValue: multiplyBy\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public divideVariable(variableName: string, divideBy: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.DIVIDE,\n            parameters: {\n                variableName: variableName,\n                variableValue: divideBy\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public reduceVariable(variableName: string, reduceBy: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REDUCE,\n            parameters: {\n                variableName: variableName,\n                variableValue: reduceBy\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public setVariable(variableName: string, value: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.SET,\n            parameters: {\n                variableName: variableName,\n                variableValue: value\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n        \n        return this;\n    }\n\n    public setSlot(variableName: string, slotType: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.SLOT,\n            parameters: {\n                variableName: variableName,\n                variableType: slotType\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n        \n        return this;\n    }\n\n    public flag(variableName: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.FLAG,\n            parameters: {\n                variableName: variableName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public unflag(variableName: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.UNFLAG,\n            parameters: {\n                variableName: variableName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public clearVariable(variableName: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.CLEAR,\n            parameters: {\n                variableName: variableName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public setRecap(message: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.RECAP,\n            parameters: {\n                message: message,\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public addToInventory(variableName: string, item: string) {\n        let param: any = {\n            variableName: variableName,\n            itemName: item,\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.ADD_TO_INVENTORY,\n            parameters: param\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public addItem(variableName: string, item: string, listSizeLimit?: number) {\n        let param: any = {\n            variableName: variableName,\n            itemName: item,\n        }\n\n        if (listSizeLimit) {\n            param.size = String(listSizeLimit);\n        }\n\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.ADD_ITEM,\n            parameters: param\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n        \n        return this;\n    }\n\n    public removeItem(variableName: string, item: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REMOVE_ITEM,\n            parameters: {\n                variableName: variableName,\n                itemName: item\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public removeFirstItem(listName: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REMOVE_FIRST,\n            parameters: {\n                variableName: listName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n        \n        return this;\n    }\n    \n    public removeLastItem(listName: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.REMOVE_LAST,\n            parameters: {\n                variableName: listName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public rollDice(diceString: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.ROLL,\n            parameters: {\n                diceString: diceString\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public markEnding() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.END,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n        return this;\n    }\n\n    public closeChoice() {\n        if (this.nestingStack.length > 0) {\n            this.nestingStack.splice(this.nestingStack.length - 1, 1);\n        }\n\n        return this;\n    }\n\n    public closeCondition() {\n        if (this.nestingStack.length > 0) {\n            this.nestingStack.splice(this.nestingStack.length - 1, 1);\n        }\n\n        return this;\n    }\n\n    public addSceneDirection(direction: SceneDirection) {\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n        this.sceneDirections.push(JSON.parse(JSON.stringify(direction)));\n        }\n        return this;\n    }\n\n    public customDirection(customDirectionName: string, customParameters: {[key:string]: string} = {}) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.CUSTOM,\n            parameters: Object.assign({\n                customName: customDirectionName\n            }, customParameters)\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public getCurrentEpochTime() {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.GET_TIME,\n            parameters: {}\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n    \n    public setBookmark(bookmarkName: string, sceneName?: string) {\n        let direction: SceneDirection = {\n            directionType: SceneDirectionType.BOOKMARK,\n            parameters: {\n                variableName: bookmarkName,\n                variableValue: sceneName\n            }\n        };\n\n        if (this.nestingStack.length > 0) {\n            if (!this.nestingStack[this.nestingStack.length - 1].parameters.directions) {\n                this.nestingStack[this.nestingStack.length - 1].parameters.directions = [];\n            }\n\n            this.nestingStack[this.nestingStack.length - 1].parameters.directions.push(direction);\n        } else {\n            this.sceneDirections.push(direction);    \n        }\n\n        return this;\n    }\n\n    public build() {\n        return this.sceneDirections;\n    }\n}"]}