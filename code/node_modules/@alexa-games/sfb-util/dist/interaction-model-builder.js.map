{"version":3,"file":"interaction-model-builder.js","sourceRoot":"","sources":["../interaction-model-builder.ts"],"names":[],"mappings":"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","sourcesContent":["import { BuiltInIntent } from './constants';\nimport { BuiltInSlotType } from './constants';\n\nconst MAX_SLOT_SIZE : number = 140;\n\nexport interface IBuiltInIntentBuilder {\n    withSampleUtterance(sampleUtterance : string) : IBuiltInIntentBuilder;\n    withSampleUtterances(generateSampleUtterances : () => string[]) : IBuiltInIntentBuilder;\n}\n\nexport interface IBuiltInIntentsBuilder {\n    thatUsesAudioPlayerInterface() : IBuiltInIntentsBuilder;\n    thatUsesDisplayInterface() : IBuiltInIntentsBuilder;\n    withCancelIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withHelpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withStopIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withPauseIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withResumeIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withMoreIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withNavigateHomeIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withNavigateSettingsIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withNextIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withPageUpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withPageDownIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withPreviousIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withScrollRightIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withScrollDownIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withScrollLeftIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withScrollUpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withRepeatIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withYesIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withNoIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withStartOverIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withShuffleOnIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withShuffleOffIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withLoopOnIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withLoopOffIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n    withFallbackIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder;\n}\n\nexport interface IIntentBuilder {\n    withIntentName(intentName : string) : IIntentBuilder;\n    withSlot(slotBuilderCallback : (slotBuilder: ISlotBuilder) => void) : IIntentBuilder;\n    withSampleUtterance(sampleUtterance : string) : IIntentBuilder;\n    withSampleUtterances(generateSampleUtterances : () => string[]) : IIntentBuilder;\n}\n\nexport interface ISlotBuilder {\n    withSlotName(slotName : string) : ISlotBuilder;\n    withBuiltInSlotType(builtInSlotType : BuiltInSlotType) : ISlotBuilder;\n    withCustomSlotType(customSlotType : string) : ISlotBuilder;\n}\n\nexport interface ICustomSlotTypeBuilder {\n    withCustomSlotTypeName(customSlotTypeName : string) : ICustomSlotTypeBuilder;\n    withCustomValues(generateCustomValues : () => string[]) : ICustomSlotTypeBuilder;\n}\n\nexport interface ICatchAllIntentBuilder {\n    withCatchAllIntentName(intentName : string) : ICatchAllIntentBuilder;\n    withCatchAllSlotName(slotName : string) : ICatchAllIntentBuilder\n    withCatchAllCustomSlotTypeName(slotTypeName : string) : ICatchAllIntentBuilder;\n    withCatchAllCustomValues(generateCustomValues : () => string[]) : ICatchAllIntentBuilder;\n    withRandomWordsAndPhrasesInCatchAllCustomValues() : ICatchAllIntentBuilder;\n    withExceptionWordsInCatchAllCustomValues() : ICatchAllIntentBuilder;\n    withExtraSlot(slotBuilderCallback : (slotBuilder: ISlotBuilder) => void) : ICatchAllIntentBuilder;\n    withExtraSampleUtterance(sampleUtterance : string) : ICatchAllIntentBuilder;\n}\n\nexport class InteractionModelBuilder {\n\n    private invocationName? : string | undefined = undefined;\n    private builtInIntentsBuilder : BuiltInIntentsBuilder = new BuiltInIntentsBuilder();\n    private intentBuilders : IntentBuilder[] = [];\n    private customSlotTypeBuilders : CustomSlotTypeBuilder[] = [];\n    private catchAllIntentBuilder? : CatchAllIntentBuilder = undefined;\n\n    withInvocationName(invocationName? : string | undefined) {\n        this.invocationName = invocationName;\n        return this;\n    }\n\n    withBuiltInIntents(builtInIntentsBuilderCallback : (builtInIntentsBuilder: IBuiltInIntentsBuilder) => void) : InteractionModelBuilder {\n        builtInIntentsBuilderCallback(this.builtInIntentsBuilder);\n        return this;\n    }\n\n    withIntent(intentBuilderCallback : (intentBuilder: IIntentBuilder) => void) : InteractionModelBuilder {\n        let intentBuilder = new IntentBuilder();\n        intentBuilderCallback(intentBuilder);\n        this.intentBuilders.push(intentBuilder);\n        return this;\n    }\n\n    withCustomSlotType(customSlotTypeBuilderCallback : (customSlotTypeBuilder: ICustomSlotTypeBuilder) => void) : InteractionModelBuilder {\n        let customSlotTypeBuilder = new CustomSlotTypeBuilder();\n        customSlotTypeBuilderCallback(customSlotTypeBuilder);\n        this.customSlotTypeBuilders.push(customSlotTypeBuilder);\n        return this;\n    }\n\n    withCatchAllIntent(catchAllIntentBuilderCallback : (catchAllIntentBuilder: ICatchAllIntentBuilder) => void) : InteractionModelBuilder {\n        this.catchAllIntentBuilder = new CatchAllIntentBuilder();        \n        catchAllIntentBuilderCallback(this.catchAllIntentBuilder);\n        return this;\n    }\n\n    build() : any {\n        let types : any[] = this.customSlotTypeBuilders.map(customSlotTypeBuilder => customSlotTypeBuilder.build());      \n        let intents : any[] = this.builtInIntentsBuilder.build();\n        let customIntents = this.intentBuilders.map(intentBuilder => intentBuilder.build());\n        Array.prototype.push.apply(intents, customIntents);\n\n        if (this.catchAllIntentBuilder) {\n            intents.push(this.catchAllIntentBuilder.buildIntent());\n            types.push(this.catchAllIntentBuilder.buildCustomSlotType());\n        }\n\n        let interactionModel =\n        {\n            languageModel: {\n                types,\n                intents,\n                invocationName: this.invocationName\n            }\n        };\n    \n        return interactionModel;\n    }\n}\n\nclass BuiltInIntentBuilder implements IBuiltInIntentBuilder {\n\n    private intentName : string;\n    private sampleUtterances : string[] = [];\n    private enabled : boolean = false;\n\n    constructor(intentName: string) {\n        this.intentName = intentName;\n    }\n\n    withSampleUtterance(sampleUtterance : string) : IBuiltInIntentBuilder {\n        this.sampleUtterances.push(sampleUtterance);\n        return this;\n    }\n\n    withSampleUtterances(generateSampleUtterances : () => string[]) : IBuiltInIntentBuilder {\n        Array.prototype.push.apply(this.sampleUtterances, generateSampleUtterances());\n        return this;\n    }\n\n    enable() {\n        this.enabled = true;\n    }\n\n    isEnabled() : boolean {\n        return this.enabled;\n    }\n\n    build() : any {\n        return  {\n            name: this.intentName,\n            samples: this.sampleUtterances\n        };\n    }\n}\n\nclass BuiltInIntentsBuilder implements IBuiltInIntentsBuilder {\n  \n    cancelIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.CANCEL_INTENT);\n    helpIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.HELP_INTENT);\n    stopIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.STOP_INTENT);\n    pauseIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.PAUSE_INTENT);\n    resumeIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.RESUME_INTENT);\n    moreIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.MORE_INTENT);\n    navigateHomeIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.NAVIGATE_HOME_INTENT);\n    navigateSettingsIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.NAVIGATE_SETTINGS_INTENT);\n    nextIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.NEXT_INTENT);\n    pageUpIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.PAGE_UP_INTENT);\n    pageDownIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.PAGE_DOWN_INTENT);\n    previousIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.PREVIOUS_INTENT);\n    scrollRightIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SCROLL_RIGHT_INTENT);\n    scrollDownIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SCROLL_DOWN_INTENT);\n    scrollLeftIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SCROLL_LEFT_INTENT);\n    scrollUpIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SCROLL_UP_INTENT);\n    repeatIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.REPEAT_INTENT);\n    yesIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.YES_INTENT);\n    noIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.NO_INTENT);\n    startOverIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.START_OVER_INTENT);\n    shuffleOnIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SHUFFLE_ON_INTENT);\n    shuffleOffIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.SHUFFLE_OFF_INTENT);\n    loopOnIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.LOOP_ON_INTENT);\n    loopOffIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.LOOP_OFF_INTENT);\n    fallbackIntentBuilder : BuiltInIntentBuilder = new BuiltInIntentBuilder(BuiltInIntent.FALLBACK_INTENT);\n    builtInIntentsBuilders : BuiltInIntentBuilder[] = [];\n\n    constructor() {\n        this.builtInIntentsBuilders.push(this.cancelIntentBuilder);\n        this.builtInIntentsBuilders.push(this.helpIntentBuilder);\n        this.builtInIntentsBuilders.push(this.stopIntentBuilder);\n        this.builtInIntentsBuilders.push(this.pauseIntentBuilder);\n        this.builtInIntentsBuilders.push(this.resumeIntentBuilder);\n        this.builtInIntentsBuilders.push(this.moreIntentBuilder);\n        this.builtInIntentsBuilders.push(this.navigateHomeIntentBuilder);\n        this.builtInIntentsBuilders.push(this.navigateSettingsIntentBuilder);\n        this.builtInIntentsBuilders.push(this.nextIntentBuilder);\n        this.builtInIntentsBuilders.push(this.pageUpIntentBuilder);\n        this.builtInIntentsBuilders.push(this.pageDownIntentBuilder);\n        this.builtInIntentsBuilders.push(this.previousIntentBuilder);\n        this.builtInIntentsBuilders.push(this.scrollRightIntentBuilder);\n        this.builtInIntentsBuilders.push(this.scrollDownIntentBuilder);\n        this.builtInIntentsBuilders.push(this.scrollLeftIntentBuilder);\n        this.builtInIntentsBuilders.push(this.scrollUpIntentBuilder);\n        this.builtInIntentsBuilders.push(this.repeatIntentBuilder);\n        this.builtInIntentsBuilders.push(this.yesIntentBuilder);\n        this.builtInIntentsBuilders.push(this.noIntentBuilder);\n        this.builtInIntentsBuilders.push(this.startOverIntentBuilder);\n        this.builtInIntentsBuilders.push(this.shuffleOnIntentBuilder);\n        this.builtInIntentsBuilders.push(this.shuffleOffIntentBuilder);\n        this.builtInIntentsBuilders.push(this.loopOnIntentBuilder);\n        this.builtInIntentsBuilders.push(this.loopOffIntentBuilder);\n        this.builtInIntentsBuilders.push(this.fallbackIntentBuilder);\n    }\n\n    thatUsesAudioPlayerInterface() : IBuiltInIntentsBuilder {\n        this.pauseIntentBuilder.enable();\n        this.resumeIntentBuilder.enable();\n        return this;\n    }\n\n    thatUsesDisplayInterface() : IBuiltInIntentsBuilder {\n        this.moreIntentBuilder.enable();\n        this.navigateHomeIntentBuilder.enable();\n        this.navigateSettingsIntentBuilder.enable();\n        this.nextIntentBuilder.enable();\n        this.pageUpIntentBuilder.enable();\n        this.pageDownIntentBuilder.enable();\n        this.previousIntentBuilder.enable();\n        this.scrollRightIntentBuilder.enable();\n        this.scrollDownIntentBuilder.enable();\n        this.scrollLeftIntentBuilder.enable();\n        this.scrollUpIntentBuilder.enable();\n        return this;\n    }\n\n    withCancelIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.cancelIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.cancelIntentBuilder)\n        }\n\n        return this;\n    }\n\n    withHelpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.helpIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.helpIntentBuilder)\n        }\n\n        return this;\n    }\n\n    withStopIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.stopIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.stopIntentBuilder)\n        }\n\n        return this;\n    }\n\n    withPauseIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.pauseIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.pauseIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withResumeIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.resumeIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.resumeIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withMoreIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.moreIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.moreIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withNavigateHomeIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.navigateHomeIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.navigateHomeIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withNavigateSettingsIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.navigateSettingsIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.navigateSettingsIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withNextIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.nextIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.nextIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withPageUpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.pageUpIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.pageUpIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withPageDownIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.pageDownIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.pageDownIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withPreviousIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.previousIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.previousIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withScrollRightIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.scrollRightIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.scrollRightIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withScrollDownIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.scrollDownIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.scrollDownIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withScrollLeftIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.scrollLeftIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.scrollLeftIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withScrollUpIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.scrollUpIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.scrollUpIntentBuilder);\n        }\n        \n        return this;\n    }\n\n    withRepeatIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.repeatIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.repeatIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withYesIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.yesIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.yesIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withNoIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.noIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.noIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withStartOverIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.startOverIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.startOverIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withShuffleOnIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.shuffleOnIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.shuffleOnIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withShuffleOffIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.shuffleOffIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.shuffleOffIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withLoopOnIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.loopOnIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.loopOnIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withLoopOffIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.loopOffIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.loopOffIntentBuilder);\n        }\n\n        return this;\n    }\n\n    withFallbackIntent(builtInIntentBuilderCallback? : (builtInIntentBuilder: IBuiltInIntentBuilder) => void) : IBuiltInIntentsBuilder {\n        this.fallbackIntentBuilder.enable();\n\n        if (builtInIntentBuilderCallback) {\n            builtInIntentBuilderCallback(this.fallbackIntentBuilder);\n        }\n\n        return this;\n    }\n\n    build() : any[] {\n        let intents : any[] = [];\n\n        this.builtInIntentsBuilders.forEach(builtInIntentsBuilder => {\n            if (builtInIntentsBuilder.isEnabled()) {\n                intents.push(builtInIntentsBuilder.build())\n            }            \n        });\n\n        return intents;\n    }\n}\n\nclass IntentBuilder implements IIntentBuilder {\n\n    private intentName? : string = 'CatchAllIntent';\n    private slotBuilders : SlotBuilder[] = [];\n    private sampleUtterances : string[] = [];\n\n    withIntentName(intentName : string) : IIntentBuilder {\n        this.intentName = intentName;\n        return this;\n    }\n\n    withSlot(slotBuilderCallback : (slotBuilder: ISlotBuilder) => void) : IIntentBuilder {\n        let slotBuilder = new SlotBuilder();\n        slotBuilderCallback(slotBuilder);\n        this.slotBuilders.push(slotBuilder);\n        return this;\n    }\n\n    withSampleUtterance(sampleUtterance : string) : IIntentBuilder {\n        this.sampleUtterances.push(sampleUtterance);\n        return this;\n    }\n\n    withSampleUtterances(generateSampleUtterances : () => string[]) : IIntentBuilder {\n        Array.prototype.push.apply(this.sampleUtterances, generateSampleUtterances());\n        return this;\n    }\n\n    build() : any {\n        if (!this.intentName) {\n            throw new Error('IntentName was not defined for intent');\n        }\n\n        let slots = this.slotBuilders.map(slotBuilder => slotBuilder.build());\n\n        return  {\n            name: this.intentName,\n            samples: this.sampleUtterances,\n            slots\n        };\n    }\n}\n\nclass SlotBuilder implements ISlotBuilder {\n\n    private slotName? : string = undefined;\n    private builtInSlotType? : BuiltInSlotType = undefined;\n    private customSlotType? : string = undefined;\n\n    withSlotName(slotName : string) : ISlotBuilder {\n        this.slotName = slotName;\n        return this;\n    }\n\n    withBuiltInSlotType(builtInSlotType : BuiltInSlotType) : ISlotBuilder {\n        this.builtInSlotType = builtInSlotType;\n        return this;\n    }\n\n    withCustomSlotType(customSlotType : string) : ISlotBuilder {\n        this.customSlotType = customSlotType;\n        return this;\n    }\n\n    getSlotName() : string | undefined {        \n        return this.slotName;\n    }\n\n    build() : any {\n        if (!this.slotName) {\n            throw new Error('SlotName is not defined for slot');\n        }\n\n        let type : string;\n\n        if (this.builtInSlotType) {\n            type = this.builtInSlotType;\n        } else if (this.customSlotType) {\n            type = this.customSlotType;\n        } else {\n            throw new Error('BuiltInSlotType or CustomSlotType are not defined for slot');\n        }\n\n        return {\n            name: this.slotName,\n            type\n        }\n    }\n}\n\nclass CustomSlotTypeBuilder implements ICustomSlotTypeBuilder {\n\n    private customSlotTypeName? : string = undefined;\n    private customValues : string[] = [];\n\n    withCustomSlotTypeName(customSlotTypeName : string) : ICustomSlotTypeBuilder {\n        this.customSlotTypeName = customSlotTypeName;\n        return this;\n    }\n\n    withCustomValues(generateCustomValues : () => string[]) : ICustomSlotTypeBuilder {\n        Array.prototype.push.apply(this.customValues, generateCustomValues());\n        return this;\n    }\n\n    build() : any {\n        if (!this.customSlotTypeName) {\n            throw new Error('CustomSlotTypeName is not defined for custom slot type');\n        }\n        \n        if (this.customValues.length <= 0) {\n            throw new Error('No custom values defined for custom slot type');\n        }\n\n        return {\n            name: this.customSlotTypeName,\n            values: this.buildSlotTypeValues()\n        };\n    }\n\n    private buildSlotTypeValues() : any[] {\n        let existingSlotTypeValues : any = {};\n        let slotTypeValues : any[] = [];\n    \n        this.customValues.forEach(value => {\n            if (value) {\n                let trimmedValue = value.trim().substr(0, MAX_SLOT_SIZE);\n\n                if (trimmedValue) {\n                    let trimmedLowerCaseValue = trimmedValue.toLowerCase();\n        \n                    if (!existingSlotTypeValues[trimmedLowerCaseValue]) {\n                        let slotItem = this.buildSlotItem(trimmedValue);\n        \n                        slotTypeValues.push(slotItem);\n                        existingSlotTypeValues[trimmedLowerCaseValue] = true;\n                    }\n                }\n            }\n        });\n    \n        return slotTypeValues;\n    }\n    \n    private buildSlotItem(value : string) : any {\n        let slotItem : Object = \t\t\n        {\n            id: null,\n            name: {\n                value: value,\n                synonyms: []\n            }\n        };\n    \n        return slotItem;\n    }\n}\n\nclass CatchAllIntentBuilder implements ICatchAllIntentBuilder {\n\n    private catchAllIntentName? : string = undefined;\n    private catchAllSlotBuilder : SlotBuilder = new SlotBuilder();\n    private catchAllCustomSlotTypeBuilder : CustomSlotTypeBuilder = new CustomSlotTypeBuilder();\n    private slotBuilders : SlotBuilder[] = [];\n    private sampleUtterances : string[] = [];\n\n    constructor() {\n        this.catchAllSlotBuilder.withSlotName('CatchAll').withCustomSlotType('CatchAllSlotType');\n        this.catchAllCustomSlotTypeBuilder.withCustomSlotTypeName('CatchAllSlotType');\n    }\n\n    withCatchAllIntentName(intentName : string) : ICatchAllIntentBuilder {\n        this.catchAllIntentName = intentName;\n        return this;\n    }\n\n    withCatchAllSlotName(slotName : string) : ICatchAllIntentBuilder {\n        this.catchAllSlotBuilder.withSlotName(slotName);\n        return this;\n    }\n\n    withCatchAllCustomSlotTypeName(slotTypeName : string) : ICatchAllIntentBuilder {\n        this.catchAllSlotBuilder.withCustomSlotType(slotTypeName);\n        this.catchAllCustomSlotTypeBuilder.withCustomSlotTypeName(slotTypeName);\n        return this;\n    }\n\n    withCatchAllCustomValues(generateCustomValues : () => string[]) : ICatchAllIntentBuilder {\n        this.catchAllCustomSlotTypeBuilder.withCustomValues(generateCustomValues);\n        return this;\n    }\n\n    withRandomWordsAndPhrasesInCatchAllCustomValues() : ICatchAllIntentBuilder {\n        this.catchAllCustomSlotTypeBuilder.withCustomValues(generateRandomWordsAndPhrases);\n        return this;\n    }\n\n    withExceptionWordsInCatchAllCustomValues() : ICatchAllIntentBuilder {\n        this.catchAllCustomSlotTypeBuilder.withCustomValues(generateExceptionWords);\n        return this;\n    }\n\n    withExtraSlot(slotBuilderCallback : (slotBuilder: ISlotBuilder) => void) : ICatchAllIntentBuilder {\n        let slotBuilder = new SlotBuilder();\n        slotBuilderCallback(slotBuilder);\n        this.slotBuilders.push(slotBuilder);\n        return this;\n    }\n\n    withExtraSampleUtterance(sampleUtterance : string) : ICatchAllIntentBuilder {\n        this.sampleUtterances.push(sampleUtterance);\n        return this;\n    }\n\n    buildIntent() : any {\n        if (!this.catchAllIntentName) {\n            throw new Error('CatchAllIntentName was not defined for catch all intent');\n        }\n\n        let samples = [ '{' + this.catchAllSlotBuilder.getSlotName() + '}' ];\n        Array.prototype.push.apply(samples, this.sampleUtterances);\n\n        let slots = this.slotBuilders.map(slotBuilder => slotBuilder.build());\n        slots.push(this.catchAllSlotBuilder.build());\n\n        return  {\n            name: this.catchAllIntentName,\n            samples,\n            slots\n        };\n    }\n\n    buildCustomSlotType() : any {\n        return this.catchAllCustomSlotTypeBuilder.build();\n    }\n}\n    \nfunction generateExceptionWords() : string[] {\n    let exceptionWords = [\n        'Soap',\n        'Sop',\n        'Sap',\n        'Four',\n        'Pap',\n        'Pop',\n        'top',\n        'none'\n    ];\n\n    return exceptionWords;\n}\n    \nfunction generateRandomWordsAndPhrases() : string[] {\n    // Generated by https://randomwordgenerator.com/phrase.php\n    let randomPhrases : string[] = [\n        'What Am I, Chopped Liver?',\n        'Back to Square One',\n        'Shot In the Dark',\n        'What Goes Up Must Come Down',\n        'Keep Your Eyes Peeled',\n        'In a Pickle',\n        'Hit Below The Belt',\n        'Elvis Has Left The Building',\n        'On the Ropes',\n        'Eat My Hat',\n        'Keep Your Shirt On',\n        'Keep On Truckin\\'',\n        'My Cup of Tea',\n        'Talk the Talk',\n        'Mountain Out of a Molehill',\n        'Fight Fire With Fire',\n        'Jaws of Life',\n        'Beating Around the Bush',\n        'Scot-free',\n        'Down And Out',\n        'Every Cloud Has a Silver Lining',\n        'Tough It Out',\n        'Money Doesn\\'t Grow On Trees',\n        'Under the Weather',\n        'No Ifs, Ands, or Buts',\n        'Greased Lightning',\n        'You Can\\'t Judge a Book By Its Cover',\n        'Ride Him, Cowboy!',\n        'Down To The Wire',\n        'Read \\'Em and Weep',\n        'Know the Ropes',\n        'Ring Any Bells?',\n        'Back To the Drawing Board',\n        'Between a Rock and a Hard Place',\n        'Short End of the Stick',\n        'Playing For Keeps',\n        'On Cloud Nine',\n        'Easy As Pie',\n        'Beating a Dead Horse',\n        'Lickety Split',\n        'Poke Fun At',\n        'Like Father Like Son',\n        'Two Down, One to Go',\n        'Break The Ice',\n        'Swinging For the Fences',\n        'Cup Of Joe',\n        'Drawing a Blank',\n        'Hard Pill to Swallow',\n        'Quality Time',\n        'There\\'s No I in Team',\n        'The Plot Thickens',\n        'Yada Yada',\n        'Quick and Dirty',\n        'All Greek To Me',\n        'A Chip on Your Shoulder',\n        'Barking Up The Wrong Tree',\n        'I Smell a Rat',\n        'Off One\\'s Base',\n        'Jumping the Gun',\n        'Raining Cats and Dogs',\n        'Jaws of Death',\n        'Son of a Gun',\n        'Down For The Count',\n        'Wild Goose Chase',\n        'Head Over Heels',\n        'Roll With the Punches',\n        'Knock Your Socks Off',\n        'Down To Earth',\n        'Heads Up',\n        'Jack of All Trades Master of None',\n        'If You Can\\'t Stand the Heat, Get Out of the Kitchen',\n        'Curiosity Killed The Cat',\n        'No-Brainer',\n        'Go Out On a Limb',\n        'Jig Is Up',\n        'In the Red',\n        'Happy as a Clam',\n        'Cut The Mustard',\n        'A Piece of Cake',\n        'Not the Sharpest Tool in the Shed',\n        'Hear, Hear',\n        'Let Her Rip',\n        'Cry Over Spilt Milk',\n        'Close But No Cigar',\n        'Throw In the Towel',\n        'Cut To The Chase',\n        'Up In Arms',\n        'High And Dry',\n        'Love Birds',\n        'Drive Me Nuts',\n        'Needle In a Haystack',\n        'Par For the Course',\n        'A Dime a Dozen',\n        'Top Drawer',\n        'Birds of a Feather Flock Together',\n        'It\\'s Not All It\\'s Cracked Up To Be',\n        'Ugly Duckling',\n        'Playing Possum',\n        'Don\\'t Count Your Chickens Before They Hatch',\n        'An Arm and a Leg',\n        'Hands Down',\n        'Right Off the Bat',\n        'Don\\'t Look a Gift Horse In The Mouth',\n        'A Fool and His Money are Soon Parted',\n        'Give a Man a Fish',\n        'Fish Out Of Water',\n        'Under Your Nose',\n        'Right Out of the Gate',\n        'Wouldn\\'t Harm a Fly',\n        'On the Same Page',\n        'Lovey Dovey',\n        'Man of Few Words',\n        'Quick On the Draw',\n        'Elephant in the Room',\n        'Fool\\'s Gold',\n        'Goody Two-Shoes',\n        'Everything But The Kitchen Sink',\n        'You Can\\'t Teach an Old Dog New Tricks',\n        'Burst Your Bubble',\n        'Rain on Your Parade',\n        'Wake Up Call',\n        'Dropping Like Flies',\n        'When the Rubber Hits the Road',\n        'Flea Market',\n        'Foaming At The Mouth',\n        'Cry Wolf',\n        'Tug of War',\n        'It\\'s Not Brain Surgery',\n        'Long In The Tooth',\n        'Mouth-watering',\n        'Go For Broke',\n        'Knuckle Down',\n        'Fit as a Fiddle',\n        'Put a Sock In It'\n    ];\n    // Generated by https://randomwordgenerator.com\n    let randomWords : string[] = [\n        'nominate',\n        'name',\n        'explain',\n        'radio',\n        'clash',\n        'cool',\n        'nail',\n        'hallway',\n        'horoscope',\n        'approval',\n        'feedback',\n        'reverse',\n        'specimen',\n        'candle',\n        'category',\n        'cheque',\n        'scratch',\n        'virtue',\n        'relate',\n        'identity',\n        'jail',\n        'conflict',\n        'conscience',\n        'rider',\n        'difficulty',\n        'version',\n        'far',\n        'sunrise',\n        'voyage',\n        'drain',\n        'precede',\n        'widen',\n        'ash',\n        'example',\n        'haunt',\n        'cabinet',\n        'warning',\n        'opponent',\n        'retirement',\n        'relax',\n        'corner',\n        'neighbour',\n        'error',\n        'customer',\n        'deprivation',\n        'module',\n        'afford',\n        'instrument',\n        'musical',\n        'dead',\n        'trend',\n        'stream',\n        'discriminate',\n        'vessel',\n        'moon',\n        'anger',\n        'quotation',\n        'chew',\n        'seasonal',\n        'thinker',\n        'quantity',\n        'finger',\n        'lean',\n        'open',\n        'registration',\n        'reliable',\n        'gold',\n        'ambiguity',\n        'project',\n        'request',\n        'assumption',\n        'remunerate',\n        'ambiguous',\n        'consultation',\n        'neighborhood',\n        'stable',\n        'coverage',\n        'testify',\n        'anniversary',\n        'ballet',\n        'drag',\n        'bacon',\n        'sequence',\n        'perform',\n        'block',\n        'folk music',\n        'patent',\n        'definite',\n        'cave',\n        'begin',\n        'defeat',\n        'crystal',\n        'damn',\n        'thank',\n        'decide',\n        'reason',\n        'telephone',\n        'injury',\n        'brag',\n        'manufacturer',\n        'digital',\n        'lay',\n        'period',\n        'use',\n        'negative',\n        'leash',\n        'random',\n        'salad',\n        'implicit',\n        'compose',\n        'episode',\n        'split',\n        'wolf',\n        'acceptable',\n        'cellar',\n        'list',\n        'estate',\n        'cafe',\n        'stool',\n        'agenda',\n        'adventure',\n        'commission',\n        'room',\n        'girlfriend',\n        'produce',\n        'profession',\n        'motivation',\n        'home',\n        'revenge',\n        'easy',\n        'absolute',\n        'bet',\n        'book',\n        'contain',\n        'preach',\n        'green',\n        'wire',\n        'decrease',\n        'imposter',\n        'calendar',\n        'jump',\n        'share',\n        'hemisphere',\n        'deputy',\n        'level',\n        'capture',\n        'continental',\n        'owl',\n        'accompany',\n        'castle',\n        'railroad',\n        'disco',\n        'monstrous',\n        'spontaneous',\n        'live',\n        'orbit',\n        'gasp',\n        'science',\n        'punch',\n        'implication',\n        'despair',\n        'button',\n        'location',\n        'terms',\n        'width',\n        'fever',\n        'ranch',\n        'dorm',\n        'performance',\n        'yearn',\n        'faith',\n        'endure',\n        'wave',\n        'refund',\n        'nightmare',\n        'impress',\n        'closed',\n        'courtesy',\n        'elapse',\n        'legislature',\n        'meadow',\n        'strange',\n        'finish',\n        'mountain',\n        'sit',\n        'forest',\n        'technique',\n        'lip',\n        'inch',\n        'belong',\n        'concentrate',\n        'entertainment',\n        'carry',\n        'retiree',\n        'camp',\n        'scrape',\n        'connection',\n        'mine',\n        'king'\n    ];\n\n    let randomInputs : string[] = [];\n    Array.prototype.push.apply(randomInputs, randomPhrases);\n    Array.prototype.push.apply(randomInputs, randomWords);\n\n    return randomInputs;\n}\n\nlet unitTests = false;\n\nif (unitTests) {\n    let interactionModelBuilder = new InteractionModelBuilder();\n    let interactionModel = interactionModelBuilder\n        .withInvocationName('memory wizard test')\n        .withBuiltInIntents(x => x\n            .withHelpIntent(x => x\n                .withSampleUtterance('Help Me'))\n            .thatUsesDisplayInterface()\n            .withNextIntent(x => x\n                    .withSampleUtterance('Skip')))\n        .withCustomSlotType(x => x\n            .withCustomSlotTypeName('CustomSlotType')\n            .withCustomValues(() => [ 'custom value', 'custom value 2' ]))\n        .withIntent(x => x.withIntentName('ProceedIntent').withSampleUtterance('Proceed'))\n        .withIntent(x => x.withIntentName('RepeatIntent').withSampleUtterance('Repeat'))\n        .withIntent(x => x.\n            withIntentName('GiveAgeIntent')\n            .withSampleUtterance('My name is {Age}')\n            .withSlot(x => x\n                .withSlotName('Age')\n                .withBuiltInSlotType(BuiltInSlotType.NUMBER)))\n        .withCatchAllIntent(x => x\n            .withCatchAllIntentName('AnswerIntent')\n            .withCatchAllSlotName('Answer')\n            .withCatchAllCustomSlotTypeName('AnswerSlotType')\n            .withCatchAllCustomValues(() => [ 'Yes, Okay' ])\n            .withRandomWordsAndPhrasesInCatchAllCustomValues()\n            .withExceptionWordsInCatchAllCustomValues())\n        .build();\n            \n    console.log(JSON.stringify(interactionModel));\n}\n"]}